import React, { Component } from "react";

class AlotDefaultParking extends Component {
  constructor(props) {
    super(props);

    this.state = {
      parkingSize:10,
      defaultParked:3,
      color_arr: ["red", "black", "white"],
      names: [
        "Alena",
        "siri",
        "Alexa",
        "Pandya",
        "John",
        "kalya",
        "Aliyana",
        "Roy",
        "Doe",
        "Ram",
        "Google",
      ],
      carName: ["BMW", "Swift", "Audi"],
    };
  }
  componentWillMount() {
    let obj1 = this.props.obj;
    // console.log(typeof(obj1.parkingSize));
    this.setState({
      parkingSize: Number(obj1.parkingSize),
      defaultParked: Number(obj1.defaultParked),
    });
  }

  dynamicNoplate = () => {
    var two = Math.floor(Math.random() * 50);

    var n = Math.floor(Math.random() * (88 - 65 + 1)) + 65;

    var three = String.fromCharCode(n);
    var four = String.fromCharCode(n + Math.floor(Math.random()*3));

    var no = Math.floor(Math.random() * 10000);
    var noPlate = "MH-" + two + "-" + three + "" + "" + four + "-" + no;
    return noPlate;
  };

  randomArray=()=>{
    let temp = [];
	let cnt=0;
	let i =1

    while (i<=this.state.parkingSize && temp.length!=this.state.defaultParked) {  

        let n = Math.floor(Math.random() * this.state.parkingSize);

      if (temp.indexOf(n) === -1) temp.push(n);
      i++;
      cnt++;

                       }

                       return temp
  }

  componentDidMount() {
    sessionStorage.clear();
    var car_detail = {
      isempty: true,
      car_alotted: "",
      ownerName: "",
      carName: "",
      numberPlate: "",
      entryDate: "",
      color: "",
      time: "",
    };

    let arr = JSON.parse(sessionStorage.getItem("car_parked"));
    // console.log(typeof(this.state.parkingSize))

var random_no=this.randomArray();
    
    if (arr == null) {
      arr = [];
      var i = 1;

      while (i <= this.state.parkingSize) {
        arr.push(car_detail);
        i++;
      }

    let s = 0;
    var temp = [];
    while (s < this.state.defaultParked) {
      console.log("outer while")
      
      while (temp.length < this.state.defaultParked) {
      console.log("inner while")
        
        let n = Math.floor(Math.random() * (this.state.parkingSize - 0) + 1);
        if (temp.indexOf(n) === -1) temp.push(n);

        var name_random = Math.floor(Math.random() * this.state.names.length);
        var car_name_random = Math.floor(
          Math.random() * this.state.carName.length
        );

        var color_length = Math.floor(
          Math.random() * this.state.color_arr.length
        );
        var color = this.state.color_arr[color_length];
        var noPlate = this.dynamicNoplate();
        var car_detail = {
          isempty: false,
          car_alotted: n,
          ownerName: this.state.names[name_random],
          carName: this.state.carName[car_name_random],
          numberPlate: noPlate,
          entryDate: new Date().toLocaleDateString(),
          color: color,
          time: new Date().toLocaleTimeString(),
        };
        arr[n] = car_detail;
      }
      s++;

        }    }
    console.log(arr);
    sessionStorage.setItem("car_parked", JSON.stringify(arr));
  }

  render() {
    // console.log(this.props.obj)
    return <div></div>;
  }
}

export default AlotDefaultParking;
