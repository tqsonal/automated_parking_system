[{"D:\\TQPP data\\ReactJS\\automated_parking_alot\\automated_parking\\src\\index.js":"1","D:\\TQPP data\\ReactJS\\automated_parking_alot\\automated_parking\\src\\reportWebVitals.js":"2","D:\\TQPP data\\ReactJS\\automated_parking_alot\\automated_parking\\src\\Components\\ParkCar.js":"3","D:\\TQPP data\\ReactJS\\automated_parking_alot\\automated_parking\\src\\Components\\Login.js":"4","D:\\TQPP data\\ReactJS\\automated_parking_alot\\automated_parking\\src\\Components\\history.js":"5","D:\\TQPP data\\ReactJS\\automated_parking_alot\\automated_parking\\src\\Components\\AlotDefaultParking.js":"6","D:\\TQPP data\\ReactJS\\automated_parking_alot\\automated_parking\\src\\App.js":"7"},{"size":636,"mtime":1611111270886,"results":"8","hashOfConfig":"9"},{"size":362,"mtime":499162500000,"results":"10","hashOfConfig":"9"},{"size":16283,"mtime":1632747487606,"results":"11","hashOfConfig":"9"},{"size":3625,"mtime":1610902186806,"results":"12","hashOfConfig":"9"},{"size":87,"mtime":1610564251241,"results":"13","hashOfConfig":"9"},{"size":3699,"mtime":1611668965114,"results":"14","hashOfConfig":"9"},{"size":631,"mtime":1610805119414,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"1y1gmgc",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"18"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"18"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"18"},"D:\\TQPP data\\ReactJS\\automated_parking_alot\\automated_parking\\src\\index.js",[],["35","36"],"D:\\TQPP data\\ReactJS\\automated_parking_alot\\automated_parking\\src\\reportWebVitals.js",[],"D:\\TQPP data\\ReactJS\\automated_parking_alot\\automated_parking\\src\\Components\\ParkCar.js",["37","38","39","40","41","42","43","44","45","46","47","48","49","50","51","52","53","54"],"import React, { Component } from \"react\";\r\nimport car_pic from \"../parking.svg\";\r\nimport AlotDefaultParking from \"./AlotDefaultParking.js\";\r\nimport \"./ParkCar.css\";\r\nclass ParkCar extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const {parkingSize,defaultParked}=this.props.history.location.state;\r\n\r\nconsole.log(parkingSize)\r\n    var today = new Date();\r\n    var dd = String(today.getDate()).padStart(2, \"0\");\r\n    var mm = String(today.getMonth() + 1).padStart(2, \"0\");\r\n    var yyyy = today.getFullYear();\r\n    today = mm + \"-\" + dd + \"-\" + yyyy;\r\n\r\n\r\n    this.state = {\r\n      ownerName: \"\",\r\n      carName: \"\",\r\n      numberPlate: \"\",\r\n      entryDate: new Date(),\r\n      curDate: '',\r\n      NameError: \"\",\r\n      carError: \"\",\r\n      numberPlateError: \"\",\r\n      DateError: \"\",\r\n      car_alotted: 0,\r\n      color: \"\",\r\n      carColorError: \"\",\r\n      refereshed_details:[],\r\n      SearchItem:'',\r\n      parkingSize:parkingSize,\r\n      defaultParked:defaultParked,\r\n      NodataError:''\r\n    };\r\n    console.log(this.state.parkingSize)\r\n  }\r\n\r\n  submithandler = (e) => {\r\n    console.log(\"called\")\r\n    const value =\r\n      e.target.name == \"numberPlate\"\r\n        ? e.target.value.toUpperCase()\r\n        : e.target.value;\r\n    this.setState({\r\n      [e.target.name]: value,\r\n    });\r\n  };\r\n\r\n  validForm = () => {\r\n    var isValid = true;\r\n    // console.log()\r\n\r\n    // alert(\"submitData called\")\r\n\r\n    if (this.state.ownerName.length == 0) {\r\n      this.setState({ NameError: \"Owner Name Should Not Be Blank\" ,\r\n     \r\n    });\r\n      isValid = false;\r\n    } else if (this.state.ownerName.length <= 1) {\r\n      this.setState({\r\n        NameError: \"Owner Name Should be greater than atleast 1 character\",\r\n       });\r\n      isValid = false;\r\n    } \r\n    else if (this.state.ownerName.match(/[0-9]/)!=null){\r\n      this.setState({ NameError: \" name should not contain number \" });\r\n      isValid = false;\r\n    }\r\n    else {\r\n      this.setState({ NameError: \"\" });\r\n      isValid = true;\r\n    }\r\n    \r\n    if (this.state.carName.length === 0) {\r\n      this.setState({ carError: \"Car Name Should Not Be Blank\",\r\n          });\r\n      isValid = false;\r\n    } else if (this.state.carName.length <= 1) {\r\n      this.setState({\r\n        carError: \"Car Name Should be greater than 1 character\",\r\n     \r\n      });\r\n      isValid = false;\r\n    } else if (this.state.carName.length > 0) {\r\n      this.setState({ carError: \"\" });\r\n      isValid = true;\r\n    }\r\n\r\n\r\n    if (\r\n      !this.state.numberPlate.match(/^[a-zA-Z]{1,3}-[0-9]{2}-[a-zA-Z]{1,2}-[0-9]{1,4}/)\r\n\r\n    ) {\r\n      this.setState({\r\n        numberPlateError: \"Entered car number plate is not valid\",\r\n\r\n      });\r\n      isValid = false;\r\n      console.log(isValid)\r\n    } \r\n    else\r\n     {    \r\n      this.setState({ numberPlateError: \"\" });\r\n      isValid = true;\r\n      console.log(\"if of pattern called\"+isValid);\r\n      \r\n    }\r\n   \r\n if (this.state.color == \"\" || this.state.color==undefined ) {\r\n  this.setState({\r\n    carColorError: \"Please entere valid car color\",\r\n       \r\n  });\r\n  isValid = false;\r\n} else {\r\n  this.setState({\r\n    carColorError: \"\"\r\n  });\r\n  isValid = true;\r\n}\r\n   \r\n    return isValid;\r\n  };\r\n\r\n  dynamicSearch=(e)=>{\r\n\r\n\r\n    this.setState({\r\n      SearchItem: e.target.value,\r\n      NodataError:''\r\n    },()=>this.searchData());\r\n  \r\n\r\n    // this.renderCarParkedDeatil() \r\n}\r\n\r\nsearchData=()=>{\r\n  // e.preventDefault();\r\n  // console.log(this.state.SearchItem+\" \")\r\n\r\n  let arr=JSON.parse(sessionStorage.getItem('car_parked'));\r\n  // console.log(\"start array\")\r\n// console.log(arr)\r\n  if(this.state.SearchItem==\"default\")\r\n  {\r\n    this.setState({\r\n      refereshed_details:arr,\r\n      NodataError:''\r\n    })\r\n  }\r\n  else{\r\n    let temparr= arr.filter(a=>a.color.toLowerCase().includes(this.state.SearchItem))\r\n    // console.log(\"temp array\")\r\n    // console.log(temparr)\r\n  // let arr_updated=JSON.parse(sessionStorage.getItem('car_parked'));\r\n  if(temparr.length==0){\r\n    this.setState({\r\n      NodataError:'no data to display'\r\n\r\n    })\r\n  }\r\n  else{\r\n    this.setState({\r\n      refereshed_details:temparr\r\n    })\r\n  }\r\n \r\n  \r\n\r\n\r\n  // if(this.state.SearchItem=='default'){\r\n  //   this.setState({\r\n  //     NodataError:'no data to display',\r\n  //   })\r\n  // }\r\n   \r\n  }\r\n  \r\n   \r\n}\r\nsubmitData = (e) => {\r\n  e.preventDefault()\r\n  var Parked_car_detail = JSON.parse(sessionStorage.getItem(\"car_parked\"));\r\nconsole.log(Parked_car_detail.length)\r\nconsole.log(\"parking size\" +this.state.parkingSize)\r\n  const validForm = this.validForm();\r\n  console.log(validForm)\r\n  var car_detail={} ;\r\n\r\n  var OccupiedSlots= Parked_car_detail.filter((a)=>a.isempty==true)\r\n  console.log(OccupiedSlots.length)\r\n\r\nif(OccupiedSlots.length==0){\r\n  alert(\"parking is full\")\r\n}\r\nelse{\r\n\r\n\r\n  if(Parked_car_detail==null && validForm==true){\r\n    Parked_car_detail=[]\r\nconsole.log(\"in if \")\r\n    car_detail = {\r\n      isempty: false,\r\n      car_alotted: 1,\r\n      ownerName: this.state.ownerName,\r\n      carName: this.state.carName,\r\n      numberPlate: this.state.numberPlate,\r\n      entryDate: this.state.entryDate,\r\n      color: this.state.color,\r\n      time: new Date().toLocaleTimeString(),\r\n    };\r\n    Parked_car_detail.push(car_detail);\r\n    // Parked_car_detail.push({});\r\n\r\n    sessionStorage.setItem(\"car_parked\", JSON.stringify(Parked_car_detail));\r\n    var Parked_car_detail_u = JSON.parse(sessionStorage.getItem(\"car_parked\"));\r\n    this.setState({\r\n      refereshed_details:Parked_car_detail_u\r\n    })\r\n    this.setState({\r\n      ownerName: \"\",\r\n          carName: \"\",\r\n          numberPlate: \"\",\r\n          color: '',\r\n          SearchItem:'',\r\n          entryDate:this.state.entryDate\r\n\r\n    \r\n    })\r\n }\r\n else if(Parked_car_detail.length>0 && validForm==true){\r\n// console.log(\"in else if \")\r\n  \r\n let cnt =true;\r\nfor(let i = 0 ; i <=Parked_car_detail.length-1;i++){\r\n  if(Parked_car_detail[i].isempty==true){\r\n    car_detail = {\r\n      isempty: false,\r\n      car_alotted: i+1,\r\n      ownerName: this.state.ownerName,\r\n      carName: this.state.carName,\r\n      numberPlate: this.state.numberPlate,\r\n      entryDate: this.state.entryDate,\r\n      color: this.state.color,\r\n      time: new Date().toLocaleTimeString()\r\n    };\r\n    cnt=false;\r\n    Parked_car_detail[i]=car_detail;\r\n\r\n    sessionStorage.setItem(\"car_parked\", JSON.stringify(Parked_car_detail));\r\n    var Parked_car_detail_u = JSON.parse(sessionStorage.getItem(\"car_parked\"));\r\n    this.setState({\r\n      refereshed_details:Parked_car_detail_u\r\n    })\r\n  break;\r\n\r\n  }\r\n\r\n}\r\n  if(cnt==true){\r\n// console.log(\"in if true \")\r\n\r\n    car_detail = {\r\n      isempty: false,\r\n      car_alotted:Parked_car_detail.length+1,\r\n      ownerName: this.state.ownerName,\r\n      carName: this.state.carName,\r\n      numberPlate: this.state.numberPlate,\r\n      entryDate: this.state.entryDate,\r\n      color: this.state.color,\r\n      time: new Date().toLocaleTimeString(),\r\n    };\r\n    Parked_car_detail.push(car_detail);\r\n    sessionStorage.setItem(\"car_parked\", JSON.stringify(Parked_car_detail));\r\n    var Parked_car_detail_u = JSON.parse(sessionStorage.getItem(\"car_parked\"));\r\n    this.setState({\r\n      refereshed_details:Parked_car_detail_u\r\n    })\r\n\r\n    this.setState({\r\n      ownerName: \"\",\r\n          carName: \"\",\r\n          numberPlate: \"\",\r\n          color: '',\r\n          SearchItem:'',\r\n      entryDate: new Date(),\r\n\r\n    \r\n    })\r\n  }\r\n  this.setState({\r\n    ownerName: \"\",\r\n        carName: \"\",\r\n        numberPlate: \"\",\r\n        color: '',\r\n        SearchItem:'',\r\n      entryDate: new Date(),\r\n\r\n  \r\n  })\r\n\r\n// console.log(Parked_car_detail)\r\n}\r\n\r\n}\r\n\r\n}\r\n  \r\n  remove_car(i){\r\n    var Parked_car_detail = JSON.parse(sessionStorage.getItem(\"car_parked\"));\r\n    var car_detail = {\r\n      isempty: true,\r\n      car_alotted: '',\r\n      ownerName: '',\r\n      carName: '',\r\n      numberPlate: '',\r\n      entryDate: '',\r\n      color: '',\r\n      time: '',\r\n    };\r\n    Parked_car_detail[i]=car_detail\r\n    sessionStorage.setItem(\"car_parked\", JSON.stringify(Parked_car_detail));\r\n    var Parked_car_detail = JSON.parse(sessionStorage.getItem(\"car_parked\"));\r\n\r\n      this.setState({\r\n        refereshed_details:Parked_car_detail\r\n      })\r\n    this.renderCarParkedDeatil()\r\n    // alert(\"called renderCarParkedDeatil from remove car\")\r\n\r\n  }\r\n\r\n  componentWillMount(){\r\n    var arr = JSON.parse(sessionStorage.getItem(\"car_parked\"));\r\n    if(arr==null){\r\n      arr=[]\r\n      this.setState({\r\n        refereshed_details:[]\r\n      })\r\n    }\r\n\r\n  }\r\n  componentDidMount() {\r\n    // console.log(this.state.entryDate);\r\n    // console.log(this.props.location.state)\r\n    // this.alotDefaultParking();\r\n   \r\n      var Parked_car_detail = JSON.parse(sessionStorage.getItem(\"car_parked\"));\r\n      if(Parked_car_detail==null){\r\n        Parked_car_detail=[]\r\n      }\r\n      // console.log(\"new dat is \"+today)\r\nthis.setState({\r\n  refereshed_details:Parked_car_detail,\r\n  // curDate: today\r\n})\r\n  }\r\n  renderCarParkedDeatil = () => {\r\n    // alert(\"renderCarParkedDeatil called\")\r\n    var Parked_car_detail = JSON.parse(sessionStorage.getItem(\"car_parked\"));\r\n\r\n    console.log(\"hello \")\r\n    if (Parked_car_detail == null) {\r\n      Parked_car_detail = [];\r\n    }\r\n    var i=1;\r\n    return this.state.refereshed_details.map((parking_detail, index) => {\r\n        \r\n\r\n      // console.log(Parked_car_detail)\r\n      const {car_alotted,color,entryDate,carName,numberPlate,ownerName,time,isempty} = parking_detail;\r\n      var n=new Date(entryDate)\r\n      // console.log(typeof(n))\r\n      var dd = String(n.getDate()).padStart(2, \"0\");\r\n    var mm = String(n.getMonth() + 1).padStart(2, \"0\");\r\n      var yyyy = n.getFullYear();\r\n      n = yyyy + \"-\" + mm + \"-\" + dd;\r\n      if(isempty==false){\r\n      return (\r\n        \r\n        <tr key={index}>\r\n          <td>{i++} </td>\r\n\r\n          <td>{ownerName}</td>\r\n          <td>{carName}</td>\r\n          <td>{numberPlate}</td>\r\n          <td>{n}</td>\r\n          <td> {time}</td>\r\n          <td> {car_alotted}</td>\r\n\r\n      <td> {color}</td>\r\n          \r\n          <td>\r\n            <button class=\"btn btn-danger delete\" onClick={()=>this.remove_car(index)}>X</button>\r\n          </td>\r\n        </tr>\r\n      );\r\n\r\n      }\r\n\r\n    }\r\n\r\n    );\r\n  };\r\n\r\n  render() {\r\n    // console.log(\"called\")\r\n    return (\r\n      <div>\r\n<AlotDefaultParking obj={this.props.location.state}/>\r\n{/* <AlotDefaultParking /> */}\r\n\r\n        <header class=\"shadow\" className=\"header\">\r\n          <div class=\"header-content d-flex justify-content-center p-2\">\r\n            <img\r\n              src={car_pic}\r\n              className=\"img\"\r\n              alt=\"not found\"\r\n              id=\"header-logo\"\r\n            />\r\n            <div className=\"ml-5 align-self-center heading_n\">Parking Lot</div>\r\n          </div>\r\n        </header>\r\n        <div className=\"container\">\r\n          <form class=\"w-50 mx-auto mt-3\" autoComplete=\"off\">\r\n            <h5 class=\"text-center\">Add Car to Parking Lot</h5>\r\n            <div class=\"form-group\">\r\n              <label for=\"owner\">Owner:</label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control rounded-1 shadow-sm\"\r\n                name=\"ownerName\"\r\n                placeholder=\"Owner Name\"\r\n                value={this.state.ownerName}\r\n                onChange={this.submithandler}\r\n              />\r\n              <span style={{ color: \"red\" }}> {this.state.NameError}</span>\r\n            </div>\r\n            <div class=\"form-group\">\r\n              <label for=\"car\">Car:</label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control rounded-1 shadow-sm\"\r\n                name=\"carName\"\r\n                placeholder=\"Car Name\"\r\n                value={this.state.carName}\r\n                onChange={this.submithandler}\r\n              />\r\n              <span style={{ color: \"red\" }}> {this.state.carError}</span>\r\n            </div>\r\n            <div class=\"form-group\">\r\n              <label for=\"licensePlate\">Car Number Plate:</label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control rounded-1 shadow-sm\"\r\n                name=\"numberPlate\"\r\n                placeholder=\"MH-15-XX-1111\"\r\n                value={this.state.numberPlate}\r\n                onChange={this.submithandler}\r\n              />\r\n              <span style={{ color: \"red\" }}>\r\n                {\" \"}\r\n                {this.state.numberPlateError}\r\n              </span>\r\n            </div>\r\n            <div class=\"row\">\r\n              {/* <div class=\"col-6 form-group\">\r\n                <label for=\"entryDate\">Entry Date:</label>\r\n                <input\r\n                  type=\"text\"\r\n                  class=\"form-control rounded-1 shadow-sm\"\r\n                  name=\"entryDate\" \r\n                  // min={this.state.entryDate}\r\n                  value={this.state.entryDate}\r\n                  onChange={this.submithandler}\r\n                  disabled\r\n                />\r\n                <span style={{ color: \"red\" }}> {this.state.DateError}</span>\r\n              </div> */}\r\n\r\n              {/* <div className=\"col-3\"> </div> */}\r\n              <div class=\"col-12 form-group\">\r\n                <label for=\"color\">Color:</label>\r\n                <select\r\n                  class=\"form-control rounded-1 shadow-sm\"\r\n                  name=\"color\" value={this.state.color}\r\n                  onChange={this.submithandler}\r\n                >\r\n                  {/* <option value=\"default\"> </option> */}\r\n                  \r\n                  <option value=\"\"> select car color </option>\r\n                  <option value=\"red\"> Red </option>\r\n                  <option value=\"black\"> Black </option>\r\n                  <option value=\"white\"> White </option>\r\n                  {/* <option value=\"Other\"> Other </option> */}\r\n                </select>\r\n                <span style={{ color: \"red\" }}>\r\n                  {\" \"}\r\n                  {this.state.carColorError}\r\n                </span>\r\n              </div>\r\n             \r\n            </div>\r\n            <button\r\n              type=\"submit\"\r\n              class=\"btn mx-auto d-block mt-2 rounded-0 shadow \"\r\n              id=\"btnOne\"\r\n              onClick={this.submitData}\r\n            >\r\n              Add Car\r\n            </button>\r\n            </form>\r\n\r\n          <div class=\"table-container mt-5 mb-5 w-75 mx-auto\">\r\n            <h5 class=\"text-center mb-3\">List of Cars in Parking Lot</h5>\r\n            {/* <div className='row'> */}\r\n            <form>\r\n              <div className='form-group'>          \r\n                  <input type=\"text\" autoComplete=\"off\" className='form-control mb-2' name='SearchItem' value={this.state.SearchItem} onChange={(e)=>this.dynamicSearch(e)} placeholder=\"Search for car color\"></input>\r\n           \r\n                  {/* <div class=\"col-12 form-group\">\r\n                <select\r\n                  class=\"form-control rounded-1 shadow-sm\"\r\n                  name=\"color\"\r\n                  onChange={this.dynamicSearch}\r\n                >\r\n                  <option value=\"default\"> select car color </option>\r\n                  <option value=\"red\"> Red </option>\r\n                  <option value=\"black\"> Black </option>\r\n                  <option value=\"white\"> White </option>\r\n                </select>\r\n              </div> */}\r\n           \r\n            </div>\r\n            </form>\r\n            {/* </div> */}\r\n\r\n            <table class=\"table table-striped shadow \">\r\n              <thead class=\"text-white header\">\r\n                <tr>\r\n                  <th>sr no</th>\r\n                  <th>Owner</th>\r\n                  <th>Car Name</th>\r\n                  <th>License Plate</th>\r\n                  <th>Entry Date</th>\r\n                  \r\n                  <th> Time</th>\r\n                  <th> Parking allotted</th>\r\n                  <th> Color</th>\r\n                  <th>Actions</th>\r\n                </tr>\r\n              </thead>\r\n              \r\n              {\r\n                this.state.NodataError!=''?<tbody><tr ><th colspan=\"9\">{this.state.NodataError}</th></tr></tbody>:<tbody>{this.renderCarParkedDeatil()}</tbody>\r\n              }\r\n            </table>\r\n          </div>\r\n\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ParkCar;\r\n","D:\\TQPP data\\ReactJS\\automated_parking_alot\\automated_parking\\src\\Components\\Login.js",["55"],"import React, { Component } from \"react\";\r\nimport \"./ParkCar.css\";\r\n\r\nvar that;\r\nclass Login extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      DefaultParked: '',\r\n      ParkingLength: '',\r\n      DefaultParkingError: '',\r\n      ParkingLengthError:''\r\n    };\r\n    that=this;\r\n  }\r\n  submithandler = (e) => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  validForm = () => {\r\n    var isValid = false;\r\n    if(this.state.ParkingLength==''){\r\n      this.setState({\r\n          ParkingLengthError:'please enter the valid number for slot length'\r\n      })\r\n      isValid=false;\r\n          }\r\n          else{\r\n            this.setState({\r\n              ParkingLengthError:''\r\n          })\r\n          isValid=true;\r\n          }\r\n    \r\n    if(Number(this.state.ParkingLength)<Number(this.state.DefaultParked )) {\r\n      // console.log(\"parking size\"+this.state.ParkingLength)\r\n      // console.log(\"default\"+this.state.DefaultParked)\r\n\r\n      // alert('in if')\r\n\r\n      this.setState({\r\n        DefaultParkingError: \"Parked cars count should not be greater than parking slot length\",\r\n      \r\n      });\r\n\r\n      isValid = false;\r\n    }\r\n    \r\n    \r\n          else{\r\n              this.setState({\r\n                  DefaultParkingError:''\r\n              })\r\n              isValid=true;\r\n          }\r\n    return isValid;\r\n  };\r\n\r\n  submitData = (e) => {\r\n    e.preventDefault()\r\n\r\n\r\n    const isvalid= this.validForm();\r\n    // alert(\" i am from submit \"+isvalid)\r\n\r\n      if(isvalid===true){\r\n// alert(isvalid+\"called from login\")\r\n        that.props.history.push({pathname:'/main',state:{parkingSize:this.state.ParkingLength,DefaultParked:this.state.DefaultParked}})\r\n        // this.props.history.push('/main')\r\n      \r\n      }\r\n\r\n    };\r\n\r\n  render() {\r\n    return (\r\n        <>\r\n        \r\n        <header className=\"header shadow mt-2\">\r\n          <div class=\"header-content d-flex justify-content-center p-2\">\r\n            <div className=\"ml-5 align-self-center heading_n\">\r\n              Welcome to Automated Parking System{\" \"}\r\n            </div>\r\n          </div>\r\n        </header>\r\n      <div className=\"container mt-5\">\r\n\r\n        <form class=\"w-50 mx-auto mt-3\" autoComplete=\"off\">\r\n          <div class=\"form-group\">\r\n            <label for=\"owner\">No of Parking lots to be available:</label>\r\n            <input\r\n              type=\"number\"\r\n              class=\"form-control rounded-1 shadow-sm\"\r\n              name=\"ParkingLength\"\r\n              placeholder=\"Enter the count of total slots you want\"\r\n              value={this.state.ParkingLength}\r\n              onChange={this.submithandler}\r\n            />\r\n          <span style={{ color: \"red\" }}> {this.state.ParkingLengthError}</span>\r\n\r\n          </div>\r\n          <div class=\"form-group\">\r\n            <label for=\"owner\">Parked cars count:</label>\r\n            <input\r\n              type=\"number\"\r\n              class=\"form-control rounded-1 shadow-sm\"\r\n              name=\"DefaultParked\"\r\n              placeholder=\"How many cars are already parked\"\r\n              value={this.state.DefaultParked}\r\n              onChange={this.submithandler}\r\n            />\r\n          </div>\r\n          <span style={{ color: \"red\" }}> {this.state.DefaultParkingError}</span>\r\n\r\n          <button\r\n            type=\"submit\"\r\n            class=\"btn mx-auto d-block mt-2 rounded-0 shadow \"\r\n            id=\"btnOne\"\r\n            onClick={this.submitData}\r\n          >\r\n            Create Parking\r\n          </button>\r\n        </form>\r\n      </div>\r\n      </>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nexport default Login;\r\n","D:\\TQPP data\\ReactJS\\automated_parking_alot\\automated_parking\\src\\Components\\history.js",[],"D:\\TQPP data\\ReactJS\\automated_parking_alot\\automated_parking\\src\\Components\\AlotDefaultParking.js",["56","57","58","59","60"],"import React, { Component } from \"react\";\r\n\r\nclass AlotDefaultParking extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      parkingSize: \"\",\r\n      defaultParked: \"\",\r\n      color_arr: [\"red\", \"black\", \"white\"],\r\n      names: [\r\n        \"Alena\",\r\n        \"siri\",\r\n        \"Alexa\",\r\n        \"Pandya\",\r\n        \"John\",\r\n        \"kalya\",\r\n        \"Aliyana\",\r\n        \"Roy\",\r\n        \"Doe\",\r\n        \"Ram\",\r\n        \"Google\",\r\n      ],\r\n      carName: [\"BMW\", \"Swift\", \"Audi\"],\r\n    };\r\n  }\r\n  componentWillMount() {\r\n    let obj1 = this.props.obj;\r\n    console.log(obj1);\r\n    // console.log(typeof(obj1.parkingSize));\r\n    this.setState({\r\n      parkingSize: obj1.parkingSize,\r\n      defaultParked: obj1.DefaultParked,\r\n    });\r\n  }\r\n\r\n  dynamicNoplate = () => {\r\n    var one = String.fromCharCode(Math.floor(Math.random() * (88- 65 + 1)) + 65);\r\n    var one_n = String.fromCharCode(Math.floor(Math.random() * (80- 65 + 1)) + 65);\r\n\r\n\r\n    var two = Math.floor(Math.random() * 50);\r\n\r\n    var n = Math.floor(Math.random() * (88- 65 + 1)) + 65;\r\n\r\n    var three = String.fromCharCode(n);\r\n    var four = String.fromCharCode(n + Math.floor(Math.random() * 3));\r\n\r\n    var no = Math.floor(Math.random() * 10000);\r\n    var noPlate = one+\"\"+one_n+\"-\" + two + \"-\" + three + \"\" + \"\" + four + \"-\" + no;\r\n    return noPlate;\r\n  };\r\n\r\n  randomArray = () => {\r\n    let temp = [];\r\n    let i = 1;\r\n    while(true)\r\n    {\r\n     let n = Math.floor(Math.random() * (this.state.parkingSize-1)+1);\r\n\r\n     if (temp.indexOf(n) === -1)\r\n     temp.push(n);\r\n     i++;\r\n     if(temp.length == this.state.defaultParked)\r\n       break;\r\n\r\n   }\r\n\r\n    return temp;\r\n  };\r\n\r\n  componentDidMount() {\r\n    sessionStorage.clear();\r\n    var car_detail = {\r\n      isempty: true,\r\n      car_alotted: \"\",\r\n      ownerName: \"\",\r\n      carName: \"\",\r\n      numberPlate: \"\",\r\n      entryDate: \"\",\r\n      color: \"\",\r\n      time: \"\",\r\n    };\r\n\r\n    let arr = JSON.parse(sessionStorage.getItem(\"car_parked\"));\r\n    // console.log(typeof(this.state.parkingSize))\r\n\r\n    var random_no = this.randomArray();\r\n    console.log(\"random array \" + random_no);\r\n    if (arr == null) {\r\n      arr = [];\r\n      var i = 1;\r\n\r\n      while (i <= this.state.parkingSize) {\r\n        arr.push(car_detail);\r\n        i++;\r\n      }\r\n\r\n      for (let i = 0; i < arr.length; i++) {\r\n        // let n = Math.floor(\r\n        //   Math.random() * (this.state.parkingSize - 0) + 1);\r\n        for (let j = 0; j < random_no.length; j++) {\r\n          if (i == random_no[j]) {\r\n            \r\n\r\n            var name_random = Math.floor(\r\n              Math.random() * this.state.names.length\r\n            );\r\n            var car_name_random = Math.floor(\r\n              Math.random() * this.state.carName.length\r\n            );\r\n\r\n            var color_length = Math.floor(\r\n              Math.random() * this.state.color_arr.length\r\n            );\r\n            var noPlate = this.dynamicNoplate();\r\n            var car_detail = {\r\n              isempty: false,\r\n              car_alotted: i+1,\r\n              ownerName: this.state.names[name_random],\r\n              carName: this.state.carName[car_name_random],\r\n              numberPlate: noPlate,\r\n              entryDate: new Date().toLocaleDateString(),\r\n              color: this.state.color_arr[color_length],\r\n              time: new Date().toLocaleTimeString(),\r\n            };\r\n            arr[i] = car_detail;\r\n          }\r\n        }\r\n      }\r\n\r\n      console.log(arr);\r\n      sessionStorage.setItem(\"car_parked\", JSON.stringify(arr));\r\n    }\r\n  }\r\n\r\n  render() {\r\n    // console.log(this.props.obj)\r\n    return <div></div>;\r\n  }\r\n}\r\n\r\nexport default AlotDefaultParking;\r\n","D:\\TQPP data\\ReactJS\\automated_parking_alot\\automated_parking\\src\\App.js",["61","62"],"import { BrowserRouter, Route, Switch } from \"react-router-dom\";\r\nimport \"./App.css\";\r\nimport Login from \"./Components/Login\";\r\nimport ParkCar from \"./Components/ParkCar.js\";\r\nimport React from 'react';\r\nimport history from './Components/history';\r\nimport { Router} from 'react-router-dom'\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n    {/* <Router history={history}>  */}\r\n    <BrowserRouter> \r\n        <Switch>\r\n          <Route exact path=\"/\"  component={Login} />\r\n          <Route  path=\"/main\"  component={ParkCar} />\r\n        </Switch>\r\n    </BrowserRouter>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n",{"ruleId":"63","replacedBy":"64"},{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","severity":1,"message":"68","line":43,"column":21,"nodeType":"69","messageId":"70","endLine":43,"endColumn":23},{"ruleId":"67","severity":1,"message":"68","line":57,"column":37,"nodeType":"69","messageId":"70","endLine":57,"endColumn":39},{"ruleId":"67","severity":1,"message":"68","line":112,"column":23,"nodeType":"69","messageId":"70","endLine":112,"endColumn":25},{"ruleId":"67","severity":1,"message":"68","line":112,"column":48,"nodeType":"69","messageId":"70","endLine":112,"endColumn":50},{"ruleId":"67","severity":1,"message":"68","line":147,"column":27,"nodeType":"69","messageId":"70","endLine":147,"endColumn":29},{"ruleId":"67","severity":1,"message":"68","line":159,"column":20,"nodeType":"69","messageId":"70","endLine":159,"endColumn":22},{"ruleId":"67","severity":1,"message":"68","line":193,"column":61,"nodeType":"69","messageId":"70","endLine":193,"endColumn":63},{"ruleId":"67","severity":1,"message":"68","line":196,"column":24,"nodeType":"69","messageId":"70","endLine":196,"endColumn":26},{"ruleId":"67","severity":1,"message":"68","line":202,"column":42,"nodeType":"69","messageId":"70","endLine":202,"endColumn":44},{"ruleId":"67","severity":1,"message":"68","line":234,"column":49,"nodeType":"69","messageId":"70","endLine":234,"endColumn":51},{"ruleId":"67","severity":1,"message":"68","line":239,"column":34,"nodeType":"69","messageId":"70","endLine":239,"endColumn":36},{"ruleId":"71","severity":1,"message":"72","line":254,"column":9,"nodeType":"73","messageId":"74","endLine":254,"endColumn":28},{"ruleId":"67","severity":1,"message":"68","line":263,"column":9,"nodeType":"69","messageId":"70","endLine":263,"endColumn":11},{"ruleId":"71","severity":1,"message":"72","line":278,"column":9,"nodeType":"73","messageId":"74","endLine":278,"endColumn":28},{"ruleId":"71","severity":1,"message":"75","line":326,"column":9,"nodeType":"73","messageId":"74","endLine":326,"endColumn":26},{"ruleId":"76","severity":1,"message":"77","line":370,"column":70,"nodeType":"78","messageId":"79","endLine":370,"endColumn":72},{"ruleId":"67","severity":1,"message":"68","line":381,"column":17,"nodeType":"69","messageId":"70","endLine":381,"endColumn":19},{"ruleId":"67","severity":1,"message":"80","line":558,"column":39,"nodeType":"69","messageId":"70","endLine":558,"endColumn":41},{"ruleId":"67","severity":1,"message":"68","line":25,"column":32,"nodeType":"69","messageId":"70","endLine":25,"endColumn":34},{"ruleId":"81","severity":1,"message":"82","line":50,"column":61,"nodeType":"69","messageId":"83","endLine":50,"endColumn":62},{"ruleId":"84","severity":1,"message":"85","line":63,"column":6,"nodeType":"73","messageId":"86","endLine":63,"endColumn":7},{"ruleId":"67","severity":1,"message":"68","line":64,"column":21,"nodeType":"69","messageId":"70","endLine":64,"endColumn":23},{"ruleId":"67","severity":1,"message":"68","line":103,"column":17,"nodeType":"69","messageId":"70","endLine":103,"endColumn":19},{"ruleId":"71","severity":1,"message":"87","line":117,"column":17,"nodeType":"73","messageId":"74","endLine":117,"endColumn":27},{"ruleId":"84","severity":1,"message":"88","line":6,"column":8,"nodeType":"73","messageId":"86","endLine":6,"endColumn":15},{"ruleId":"84","severity":1,"message":"89","line":7,"column":10,"nodeType":"73","messageId":"86","endLine":7,"endColumn":16},"no-native-reassign",["90"],"no-negated-in-lhs",["91"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-redeclare","'Parked_car_detail_u' is already defined.","Identifier","redeclared","'Parked_car_detail' is already defined.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","Expected '!==' and instead saw '!='.","no-useless-concat","Unexpected string concatenation of literals.","unexpectedConcat","no-unused-vars","'i' is assigned a value but never used.","unusedVar","'car_detail' is already defined.","'history' is defined but never used.","'Router' is defined but never used.","no-global-assign","no-unsafe-negation"]